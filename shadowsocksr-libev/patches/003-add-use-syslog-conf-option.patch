diff --git a/src/jconf.c b/src/jconf.c
index 710f70d..9d2b631 100644
--- a/src/jconf.c
+++ b/src/jconf.c
@@ -325,6 +325,12 @@ read_jconf(const char *file)
                     check_json_value_type(value, json_boolean,
                                           "invalid config file: option 'ipv6_first' must be a boolean");
                     conf.ipv6_first = value->u.boolean;
+#ifdef HAS_SYSLOG
+                } else if (strcmp(name, "use_syslog") == 0) {
+                    check_json_value_type(value, json_boolean,
+                                          "invalid config file: option 'use_syslog' must be a boolean");
+                    use_syslog = value->u.boolean;
+#endif
                 }
             }
         }
diff --git a/src/local.c b/src/local.c
index d7e49ad..9f838e2 100644
--- a/src/local.c
+++ b/src/local.c
@@ -1802,8 +1802,8 @@ main(int argc, char **argv)
         local_addr = "127.0.0.1";
     }
 
+    USE_SYSLOG(argv[0], pid_flags);
     if (pid_flags) {
-        USE_SYSLOG(argv[0]);
         daemonize(pid_path);
     }
 
diff --git a/src/manager.c b/src/manager.c
index 01447b1..e34d14c 100644
--- a/src/manager.c
+++ b/src/manager.c
@@ -779,8 +779,8 @@ main(int argc, char **argv)
         timeout = "60";
     }
 
+    USE_SYSLOG(argv[0], pid_flags);
     if (pid_flags) {
-        USE_SYSLOG(argv[0]);
         daemonize(pid_path);
     }
 
diff --git a/src/redir.c b/src/redir.c
index feafd5e..54336dc 100644
--- a/src/redir.c
+++ b/src/redir.c
@@ -1310,8 +1310,8 @@ main(int argc, char **argv)
         local_addr = "127.0.0.1";
     }
 
+    USE_SYSLOG(argv[0], pid_flags);
     if (pid_flags) {
-        USE_SYSLOG(argv[0]);
         daemonize(pid_path);
     }
 
diff --git a/src/server.c b/src/server.c
index 577777e..0f5bd15 100644
--- a/src/server.c
+++ b/src/server.c
@@ -1695,8 +1695,8 @@ main(int argc, char **argv)
     }
 #endif
 
+    USE_SYSLOG(argv[0], pid_flags);
     if (pid_flags) {
-        USE_SYSLOG(argv[0]);
         daemonize(pid_path);
     }
 
diff --git a/src/tunnel.c b/src/tunnel.c
index 390c4d0..a6cc805 100644
--- a/src/tunnel.c
+++ b/src/tunnel.c
@@ -1100,8 +1100,8 @@ main(int argc, char **argv)
         local_addr = "127.0.0.1";
     }
 
+    USE_SYSLOG(argv[0], pid_flags);
     if (pid_flags) {
-        USE_SYSLOG(argv[0]);
         daemonize(pid_path);
     }
 
diff --git a/src/utils.h b/src/utils.h
index 884c09f..1c2cc5e 100644
--- a/src/utils.h
+++ b/src/utils.h
@@ -51,7 +51,7 @@
 #include <android/log.h>
 
 #define USE_TTY()
-#define USE_SYSLOG(ident)
+#define USE_SYSLOG(ident, _cond)
 #define LOGI(...)                                                \
     ((void)__android_log_print(ANDROID_LOG_DEBUG, "shadowsocks", \
                                __VA_ARGS__))
@@ -72,7 +72,7 @@ extern FILE *logfile;
 
 #define USE_TTY()
 
-#define USE_SYSLOG(ident)
+#define USE_SYSLOG(ident, _cond)
 
 #define USE_LOGFILE(ident)                                     \
     do {                                                       \
@@ -113,7 +113,7 @@ extern FILE *logfile;
 
 #define USE_TTY()
 
-#define USE_SYSLOG(ident)
+#define USE_SYSLOG(ident, _cond)
 
 #define LOGI(format, ...)                                                   \
     do {                                                                    \
@@ -148,11 +148,15 @@ extern int use_syslog;
 
 #define TIME_FORMAT "%F %T"
 
-#define USE_SYSLOG(ident)                          \
-    do {                                           \
-        use_syslog = 1;                            \
-        openlog((ident), LOG_CONS | LOG_PID, 0); } \
-    while (0)
+#define USE_SYSLOG(_ident, _cond)                               \
+    do {                                                        \
+        if (!use_syslog && (_cond)) {                           \
+            use_syslog = 1;                                     \
+        }                                                       \
+        if (use_syslog) {                                       \
+            openlog((_ident), LOG_CONS | LOG_PID, LOG_DAEMON);  \
+        }                                                       \
+    } while (0)
 
 #define LOGI(format, ...)                                                        \
     do {                                                                         \
